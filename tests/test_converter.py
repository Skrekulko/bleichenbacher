from bleichenbacher.converter import int_to_hex, hex_to_int


def test_integer_to_bytes() -> None:
    # Integer
    integer = 7095489608558998025177419207519483617393493589136661977651946556841509306478643112018112967411767412648226932323893172795623336004442728664013260693094511695147360437309483259780452020675556221656934915395807929085072954226855144278096992213219610350460157491048011990035730319987296660609129862606567418374872832690568385064695604570641983936640086545421360465131474453856304686942367120284099675801537319997123470308552247889097950968219890352648410604370543531056726676452316261412286014875287773371855296046877979755234237394610453709218392628241697919227146421048160768407003956036432536943024034372406696215833

    # Bytes Equivalent
    bytes = b"85\x04\xce/&j\xd2\xce\xcb\x02\xe2\x8d\xccQ\xb4\x94\x86\x18|\xadA\x1b~;b\x0b\x80\xc0\x06\xf4\x16\xb2S" \
            b"\xec\xea.\x1b\x12\xe8\xf9\x16\x9d\x04q\xae\x02\xd2<O\x9aG\xb0\x8c\x9c\xb3\xc3\xe2\xe0<\x8e\xbe5r\xcb" \
            b"\xbe\x96Z\x97VN+\xc5\xd2\x19E&\x90\x89\x8bs\x04\xfd*\x06.\xc4\xb7\x03C\xa6\xe2\xa0a\xa9I;:8\x1b\x99" \
            b"\xd3\xdd\x0c}\xb1g$\x96:\xed!z\xa0\xb5@\x0e\t\xb0\xcb\xad=5,y\x96\x05\xbb\xf2\xb9\xfa5@\xe0\x986\\1" \
            b"\xd5\xfb\xad\xe76oY'2\x1c\xe2\xeee\x80x\xd8i\xe0$#f\x1cl\x146q\x0f\x1c\x8e\xde\xd5\xe2\t\xb0m\xbb\xdd" \
            b"\xb3\x9aU\x03\x95\x93\xe2@\x1f1\x01\xd8\xe5\xcd\xc6\x90\xb8By\xe1\xf5\xf0^\xf7\xff\x02\xde`%\x17\xd7" \
            b"\x84\x92\x01\x83\xea\x10x\xb6!\x11\x89\xae\x01\xc9\xad\xe0\xda\x1f\x00i)\x80TO-%]\x95\rwn\xc3\xa5\x85*" \
            b"\x1e\xce4\xe0\xed)\xd2SP\xa3\x85\xeb\xf4\x05\x19"

    assert int_to_hex(integer=integer, byteorder="big") == bytes


def test_bytes_to_integer() -> None:
    # Bytes
    bytes = b"85\x04\xce/&j\xd2\xce\xcb\x02\xe2\x8d\xccQ\xb4\x94\x86\x18|\xadA\x1b~;b\x0b\x80\xc0\x06\xf4\x16\xb2S" \
            b"\xec\xea.\x1b\x12\xe8\xf9\x16\x9d\x04q\xae\x02\xd2<O\x9aG\xb0\x8c\x9c\xb3\xc3\xe2\xe0<\x8e\xbe5r\xcb" \
            b"\xbe\x96Z\x97VN+\xc5\xd2\x19E&\x90\x89\x8bs\x04\xfd*\x06.\xc4\xb7\x03C\xa6\xe2\xa0a\xa9I;:8\x1b\x99" \
            b"\xd3\xdd\x0c}\xb1g$\x96:\xed!z\xa0\xb5@\x0e\t\xb0\xcb\xad=5,y\x96\x05\xbb\xf2\xb9\xfa5@\xe0\x986\\1" \
            b"\xd5\xfb\xad\xe76oY'2\x1c\xe2\xeee\x80x\xd8i\xe0$#f\x1cl\x146q\x0f\x1c\x8e\xde\xd5\xe2\t\xb0m\xbb\xdd" \
            b"\xb3\x9aU\x03\x95\x93\xe2@\x1f1\x01\xd8\xe5\xcd\xc6\x90\xb8By\xe1\xf5\xf0^\xf7\xff\x02\xde`%\x17\xd7" \
            b"\x84\x92\x01\x83\xea\x10x\xb6!\x11\x89\xae\x01\xc9\xad\xe0\xda\x1f\x00i)\x80TO-%]\x95\rwn\xc3\xa5\x85*" \
            b"\x1e\xce4\xe0\xed)\xd2SP\xa3\x85\xeb\xf4\x05\x19"

    # Integer Equivalent
    integer = 7095489608558998025177419207519483617393493589136661977651946556841509306478643112018112967411767412648226932323893172795623336004442728664013260693094511695147360437309483259780452020675556221656934915395807929085072954226855144278096992213219610350460157491048011990035730319987296660609129862606567418374872832690568385064695604570641983936640086545421360465131474453856304686942367120284099675801537319997123470308552247889097950968219890352648410604370543531056726676452316261412286014875287773371855296046877979755234237394610453709218392628241697919227146421048160768407003956036432536943024034372406696215833

    assert hex_to_int(hexadecimal=bytes, byteorder="big") == integer
