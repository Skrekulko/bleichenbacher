from bleichenbacher.math import mod_pow
from Crypto.Random.random import getrandbits


def test_math_mod_pow() -> None:
    # Base
    base = 172509345307055870531408701887695636907248025715014681417588031933087456149616523246179422270426666361113198974692143031340456193081357389723360443522029132884340775485112204779111050617774200766249861095621106867952390024088013902085070663293711381971157837100702637393276733859350994111200191429592667473916

    # Exponent
    exponent = 145555054948305649371815581895699262752194508695591098701582886556687987730801586386161446948302841938861625131902961748679565008279223830378795164517369349045003560296064361993171104480055848906804231639794171564181566344795840453647773281664825396317864529831413207968978491131022785912123593292899595407935

    # Modulus
    modulus =51115798153876342395407055919088845886073340684576616949131821271526373845505680704839703870065164142247987401033301298761650378288847284249365701644578710541142224157068949822818495607080219339439018792579420304557098844329022825558473391613677671116589498256530355235650897893795470262922864515412307133171

    # Result
    result = 38269926318185832057319322504333147184613497014801870573103911365474791639344449989150963771462502864696764794455814354181900421808499590977484292785472867361898419849726889133458223505613609862329390664123414829606421847655600763871338023048187709302120811048476938788925631901008336469767581014566214414437

    assert mod_pow(b=base, e=exponent, m=modulus) == result
